{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"  \\n  text-decoration: none; \\n  font-size: 20px;\\n  cursor: pointer;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"  \\n  list-style: none;\\n  padding: 0.3em 1.5em; \\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"  \\n  margin: 0 1em;\\n  padding: 1.5em;\\n  font-weight: bold;\\n  font-size: 30px;  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\n\nvar PostLink = function PostLink(props) {\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.id)));\n};\n\nexport default function Blog() {\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"My Blog\");\n}\nvar PostsHeader = styled.h2(_templateObject());\nvar ListItem = styled.li(_templateObject2());\nvar ListItemLink = styled.a(_templateObject3());\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(PostsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(ListItem, {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(ListItemLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, post.title)));\n  })));\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var store;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = _ref2.store;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(store.dispatch(fetchPosts()));\n\n        case 3:\n          return _context.abrupt(\"return\", {});\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default nextConnect(function (state) {\n  return state;\n})(Index);","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/index.tsx"],"names":["Link","PostLink","props","id","Blog","PostsHeader","styled","h2","ListItem","li","ListItemLink","a","Index","posts","map","post","title","getInitialProps","store","dispatch","fetchPosts","nextConnect","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,eAAQA,KAAK,CAACC,EAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACC,EAAV,CADF,CADF,CADe;AAAA,CAAjB;;AAQA,eAAe,SAASC,IAAT,GAAgB;AAC7B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAGD;AAGD,IAAMC,WAAW,GAAGC,MAAM,CAACC,EAAV,mBAAjB;AAOA,IAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAV,oBAAd;AAKA,IAAMC,YAAY,GAAGJ,MAAM,CAACK,CAAV,oBAAlB;;AAUA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsB;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAElC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACf,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACZ,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYY,IAAI,CAACZ,EAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,IAAI,CAACC,KADR,CADJ,CADF,CADe;AAAA,GAAd,CAAL,CAFF,CADF;AAcD,CAhBD;;AAkBAJ,KAAK,CAACK,eAAN,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,UAAAA,KAAhB,SAAgBA,KAAhB;AAAA;AAAA,2CACjBA,KAAK,CAACC,QAAN,CAAeC,UAAU,EAAzB,CADiB;;AAAA;AAAA,2CAEhB,EAFgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAKA,eAAeC,WAAW,CAAC,UAACC,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAX,CAA8BV,KAA9B,CAAf","sourcesContent":["import Link from 'next/link';\n\nconst PostLink = (props: any) => (\n  <li>\n    <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n      <a>{props.id}</a>\n    </Link>\n  </li>\n);\n\nexport default function Blog() {\n  return (\n      <h1>My Blog</h1>\n  );\n}\n\n\nconst PostsHeader = styled.h2`  \n  margin: 0 1em;\n  padding: 1.5em;\n  font-weight: bold;\n  font-size: 30px;  \n`;\n\nconst ListItem = styled.li`  \n  list-style: none;\n  padding: 0.3em 1.5em; \n`;\n\nconst ListItemLink = styled.a`  \n  text-decoration: none; \n  font-size: 20px;\n  cursor: pointer;\n`;\n\ninterface Props  {\n  posts: Post[];\n}\n\nconst Index = ({ posts }: Props) => {\n\n  return (\n    <Layout>\n      <PostsHeader>Latest posts</PostsHeader>\n      <ul>{posts.map(post => (\n          <ListItem key={post.id}>\n            <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n                <ListItemLink>\n                  {post.title}\n                </ListItemLink>         \n            </Link>\n          </ListItem>\n        ))}</ul>\n    </Layout>\n  )\n} \n\nIndex.getInitialProps =  async function({store}) {\n  await store.dispatch(fetchPosts());\n  return {};\n};\n\nexport default nextConnect((state) => state)(Index)"]},"metadata":{},"sourceType":"module"}