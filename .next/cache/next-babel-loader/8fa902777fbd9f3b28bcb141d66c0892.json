{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { ADD_POST, FETCH_POSTS } from '../constants/action-types';\nimport { getPosts, getComments } from '../api/client';\nexport function addPost() {\n  debugger;\n  return {\n    type: ADD_POST,\n    msg: \"Will Add a New Post\"\n  };\n}\nexport var fetchPosts = function fetchPosts() {\n  return function _callee(dispatch) {\n    var posts;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getPosts());\n\n          case 2:\n            posts = _context.sent;\n            return _context.abrupt(\"return\", dispatch({\n              type: FETCH_POSTS,\n              posts: posts\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var fetchComments = function fetchComments() {\n  return function _callee2(dispatch) {\n    var posts;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getComments());\n\n          case 2:\n            posts = _context2.sent;\n            return _context2.abrupt(\"return\", dispatch({\n              type: FETCH_COMME,\n              posts: posts\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["D:/test_tasks/test-task-React/actions/index.ts"],"names":["ADD_POST","FETCH_POSTS","getPosts","getComments","addPost","type","msg","fetchPosts","dispatch","posts","fetchComments","FETCH_COMME"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAmE,2BAAnE;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,eAAtC;AAEA,OAAO,SAASC,OAAT,GAAoB;AACzB;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEL,QADD;AAELM,IAAAA,GAAG,EAAE;AAFA,GAAP;AAID;AAED,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACVN,QAAQ,EADE;;AAAA;AACxBO,YAAAA,KADwB;AAAA,6CAEvBD,QAAQ,CAAC;AAAEH,cAAAA,IAAI,EAAEJ,WAAR;AAAqBQ,cAAAA,KAAK,EAALA;AAArB,aAAD,CAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAnB;AAKP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,kBAAOF,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACbL,WAAW,EADE;;AAAA;AAC3BM,YAAAA,KAD2B;AAAA,8CAE1BD,QAAQ,CAAC;AAAEH,cAAAA,IAAI,EAAEM,WAAR;AAAqBF,cAAAA,KAAK,EAALA;AAArB,aAAD,CAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAtB","sourcesContent":["import { ADD_POST, FETCH_POSTS, FETCH_COMMENTS, ADD_COMMENT } from '../constants/action-types';\nimport { getPosts, getComments } from '../api/client';\n\nexport function addPost () {\n  debugger;\n  return {\n    type: ADD_POST,\n    msg: \"Will Add a New Post\"\n  }\n}\n\nexport const fetchPosts = () => async (dispatch: any) => {\n  const posts = await getPosts();\n  return dispatch({ type: FETCH_POSTS, posts });\n};\n\nexport const fetchComments = () => async (dispatch: any) => {\n  const posts = await getComments();\n  return dispatch({ type: FETCH_COMME, posts });\n}"]},"metadata":{},"sourceType":"module"}