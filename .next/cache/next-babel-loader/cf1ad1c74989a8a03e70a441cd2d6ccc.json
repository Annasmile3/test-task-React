{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 90%;\\n  padding: 5px 10px;\\n  background-color: #e6e6e6;\\n  border-radius: 15px;\\n  border: none;\\n  outline: none;\\n\\n  .post-photo {\\n    width: 50%;\\n    margin-right: 5%;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin: 30px 0 30px 15px;\\n\\n  .post-photo {\\n    width: 50%;\\n    margin-right: 5%;\\n  }\\n\\n  p {\\n    font-family: serif;\\n    color: grey;\\n  }\\n  \\n  form {\\n    position: relative;\\n\\n    button {\\n      position: absolute;\\n      top: 4px;\\n      right: 10%;\\n      background-color: #e6e6e6;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { createPost } from '../../client';\nimport Layout from '../../components/MyLayout';\nvar PostDetails = styled.section(_templateObject());\nvar CommentInput = styled.input(_templateObject2());\nvar CommentsList = styled.ul(_templateObject3());\n\nvar Post = function Post(props) {\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var handleInputChange = function handleInputChange(_ref) {\n    var target = _ref.target;\n    setComment(target.value);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (comment.trim() !== '') {\n              createPost({\n                body: comment,\n                postId: props.post.id\n              }); // await axios\n              //   .post('https://simple-blog-api.crew.red/comments', { body: comment, postId: props.post.id });\n\n              setComment('');\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _props$post = props.post,\n      title = _props$post.title,\n      body = _props$post.body,\n      comments = props.comments;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(PostDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"post-photo\",\n    alt: \"laptop\",\n    src: \"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, body), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(CommentInput, {\n    type: \"text\",\n    value: comment,\n    placeholder: \"Comment...\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Add\")), __jsx(CommentsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, comments.map(function (item) {\n    return __jsx(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, item.body);\n  })))));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, postFromServer, commentsFromServer, comments;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = context.query.id;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id, \"?_embed=comments\")));\n\n        case 3:\n          postFromServer = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/comments'));\n\n        case 6:\n          commentsFromServer = _context2.sent;\n          comments = commentsFromServer.data.filter(function (comment) {\n            return comment.postId === +id;\n          });\n          return _context2.abrupt(\"return\", {\n            post: postFromServer.data,\n            comments: comments\n          });\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/[id].tsx"],"names":["React","useState","axios","styled","createPost","Layout","PostDetails","section","CommentInput","input","CommentsList","ul","Post","props","comment","setComment","handleInputChange","target","value","handleSubmit","trim","body","postId","post","id","title","comments","map","item","getInitialProps","context","query","get","postFromServer","commentsFromServer","data","filter"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent } from 'react';\nimport { NextPageContext } from 'next';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { createPost, createComment } from '../../client';\nimport Layout from '../../components/MyLayout';\n\nconst PostDetails = styled.section`\n  display: flex;\n  margin: 30px 0 30px 15px;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n\n  p {\n    font-family: serif;\n    color: grey;\n  }\n  \n  form {\n    position: relative;\n\n    button {\n      position: absolute;\n      top: 4px;\n      right: 10%;\n      background-color: #e6e6e6;\n      border: none;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n`;\n\nconst CommentInput = styled.input`\n  width: 90%;\n  padding: 5px 10px;\n  background-color: #e6e6e6;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n`;\n\nconst CommentsList = styled.ul`\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\n`;\n\nconst Post = (props:any) => {\n  const [comment, setComment] = useState('');\n\n  const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setComment(target.value);\n  };\n\n  const handleSubmit = async () => {\n    if (comment.trim() !== '') {\n      createPost({ body: comment, postId: props.post.id });\n      // await axios\n      //   .post('https://simple-blog-api.crew.red/comments', { body: comment, postId: props.post.id });\n      setComment('');\n    }\n  };\n\n  const { post: { title, body }, comments } = props;\n  return (\n    <Layout>\n      <PostDetails>\n        <img\n          className=\"post-photo\"\n          alt=\"laptop\"\n          src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\"\n        />\n        <div>\n          <h1>{title}</h1>\n          <p>{body}</p>\n          <form onSubmit={handleSubmit}>\n            <CommentInput\n              type=\"text\"\n              value={comment}\n              placeholder=\"Comment...\"\n              onChange={handleInputChange}\n            />\n            <button type=\"submit\">Add</button>\n          </form>\n          <CommentsList>\n            {comments.map((item: Comment) => (\n              <li key={item.id}>\n                {item.body}\n              </li>\n            ))}\n          </CommentsList>\n        </div>\n      </PostDetails>\n    </Layout>\n  );\n};\n\nPost.getInitialProps = async function (context: NextPageContext) {\n  const { id } = context.query;\n  const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments');\n  const comments = commentsFromServer.data.filter((comment: Comment) => comment.postId === +id);\n  return {\n    post: postFromServer.data,\n    comments,\n  };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}