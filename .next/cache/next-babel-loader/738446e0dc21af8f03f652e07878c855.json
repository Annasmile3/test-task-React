{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  list-style-type: none;\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr;\\n  gap: 50px;\\n  padding: 0;\\n\\n  .post-photo {\\n    width: 100%;\\n  }\\n\\n  .title {\\n    text-decoration: none;\\n    font-weight: bold;\\n    font-size: 20px;\\n    color: #000;\\n\\n    &:active {\\n      color: blue;\\n    }\\n  }\\n\\n  .content {\\n    font-family: serif;\\n    color: grey;\\n    margin-top: 5px;\\n  }\\n\\n  @media (max-width: 768px) {\\n    grid-template-columns: 1fr 1fr;\\n    gap: 30px;\\n  }\\n\\n  @media (max-width: 500px) {\\n    grid-template-columns: 1fr;\\n    gap: 15px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 200px;\\n  margin: 30px auto 50px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { Container } from 'next/app';\nimport styled from 'styled-components';\nimport { Provider } from 'react-redux';\nimport { getPosts } from '../api/client'; // import { fetchPosts } from '../actions';\n\nimport store from '../store/index';\nimport Layout from '../components/MyLayout';\nvar Heading = styled.h1(_templateObject());\nvar PostList = styled.ul(_templateObject2());\n\nvar Index = function Index(props) {\n  var posts = props.posts;\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(PostList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      className: \"post-photo\",\n      alt: \"laptop\",\n      src: \"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), __jsx(Link, {\n      href: \"/posts/[id]`\",\n      as: \"/posts/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      title: \"Details for \".concat(post.title),\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, post.title)), __jsx(\"p\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, post.body));\n  })))));\n};\n\nIndex.getInitialProps = function _callee() {\n  var posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(getPosts());\n\n        case 2:\n          posts = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: posts\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/index.tsx"],"names":["React","Link","Container","styled","Provider","getPosts","store","Layout","Heading","h1","PostList","ul","Index","props","posts","map","post","id","title","body","getInitialProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,QAAT,QAAyB,eAAzB,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,IAAMC,OAAO,GAAGL,MAAM,CAACM,EAAV,mBAAb;AAKA,IAAMC,QAAQ,GAAGP,MAAM,CAACQ,EAAV,oBAAd;;AA2CA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAkB;AAAA,MACtBC,KADsB,GACZD,KADY,CACtBC,KADsB;AAE9B,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,QAAD;AAAU,IAAA,KAAK,EAAGR,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,WACT;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,GAAG,EAAC,6JAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,wBAAiBD,IAAI,CAACE,KAAtB,CAAR;AAAuC,MAAA,SAAS,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0DF,IAAI,CAACE,KAA/D,CADF,CAPF,EAUE;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBF,IAAI,CAACG,IAA7B,CAVF,CADS;AAAA,GAAV,CADH,CAFF,CADA,CADA,CADF;AAwBD,CA1BD;;AA4BAP,KAAK,CAACQ,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFf,QAAQ,EADN;;AAAA;AAChBS,UAAAA,KADgB;AAAA,2CAGf;AAAEA,YAAAA,KAAK,EAALA;AAAF,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAMA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport App, { Container } from 'next/app';\nimport styled from 'styled-components';\nimport { Provider } from 'react-redux';\n\nimport { getPosts } from '../api/client';\n// import { fetchPosts } from '../actions';\n\nimport store from '../store/index'\nimport Layout from '../components/MyLayout';\n\nconst Heading = styled.h1`\n  width: 200px;\n  margin: 30px auto 50px;\n`;\n\nconst PostList = styled.ul`\n  list-style-type: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 50px;\n  padding: 0;\n\n  .post-photo {\n    width: 100%;\n  }\n\n  .title {\n    text-decoration: none;\n    font-weight: bold;\n    font-size: 20px;\n    color: #000;\n\n    &:active {\n      color: blue;\n    }\n  }\n\n  .content {\n    font-family: serif;\n    color: grey;\n    margin-top: 5px;\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n    gap: 30px;\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\ninterface Props {\n  posts: Post[];\n}\n\nconst Index = (props: Props) => {\n  const { posts } = props;\n  return (\n    <Container>\n    <Provider store={ store }>\n    <Layout>\n      <Heading>Latest posts</Heading>\n      <PostList>\n        {posts.map((post: Post) => (\n          <li key={post.id}>\n            <img\n              className=\"post-photo\"\n              alt=\"laptop\"\n              src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\"\n            />\n            <br />\n            <Link href=\"/posts/[id]`\" as={`/posts/${post.id}`}>\n              <a title={`Details for ${post.title}`} className=\"title\">{post.title}</a>\n            </Link>\n            <p className=\"content\">{post.body}</p>\n          </li>\n        ))}\n      </PostList>\n    </Layout>\n    </Provider></Container>\n  );\n}\n\nIndex.getInitialProps = async function () {\n  const posts = await getPosts();\n\n  return { posts };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}