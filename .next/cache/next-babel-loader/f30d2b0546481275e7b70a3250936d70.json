{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 90%;\\n  padding: 5px 10px;\\n  background-color: #e6e6e6;\\n  border-radius: 15px;\\n  border: none;\\n  outline: none;\\n\\n  .post-photo {\\n    width: 50%;\\n    margin-right: 5%;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-top: 30px;\\n  margin-left: 15px;\\n\\n  .post-photo {\\n    width: 50%;\\n    margin-right: 5%;\\n  }\\n\\n  form {\\n    position: relative;\\n\\n    button {\\n      position: absolute;\\n      top: 3px;\\n      right: 10%;\\n      background-color: #e6e6e6;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport styled from 'styled-components';\nvar PostDetails = styled.section(_templateObject());\nvar CommentInput = styled.input(_templateObject2());\nvar CommentsList = styled.ul(_templateObject3());\n\nvar Post = function Post(props) {\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var handleInputChange = function handleInputChange(_ref) {\n    var target = _ref.target;\n    setComment(target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(comment.trim() !== '')) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('https://simple-blog-api.crew.red/comments', {\n              body: comment,\n              postId: props.post.id\n            }));\n\n          case 3:\n            setComment('');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Layout, null, __jsx(PostDetails, null, __jsx(\"img\", {\n    className: \"post-photo\",\n    src: \"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n    alt: \"post photo\"\n  }), __jsx(\"div\", null, __jsx(\"h1\", null, props.post.title), __jsx(\"p\", null, props.post.body), __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(CommentInput, {\n    type: \"text\",\n    value: comment,\n    placeholder: \"Comment...\",\n    onChange: handleInputChange\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Add\")), __jsx(CommentsList, null, props.comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id\n    }, comment.body);\n  })))));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, postFromServer, commentsFromServer, comments;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = context.query.id;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id, \"?_embed=comments\")));\n\n        case 3:\n          postFromServer = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/comments'));\n\n        case 6:\n          commentsFromServer = _context2.sent;\n          comments = commentsFromServer.data.filter(function (comment) {\n            return comment.postId === +id;\n          });\n          return _context2.abrupt(\"return\", {\n            post: postFromServer.data,\n            comments: comments\n          });\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}