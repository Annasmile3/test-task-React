{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  list-style-type: none;\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr;\\n  gap: 50px;\\n  padding: 0;\\n\\n  .post-photo {\\n    width: 100%;\\n  }\\n\\n  .title {\\n    text-decoration: none;\\n    font-weight: bold;\\n    font-size: 20px;\\n    color: #000;\\n\\n    &:active {\\n      color: blue;\\n    }\\n  }\\n\\n  .content {\\n    font-family: serif;\\n    color: grey;\\n    margin-top: 5px;\\n  }\\n\\n  @media (max-width: 768px) {\\n    grid-template-columns: 1fr 1fr;\\n    gap: 30px;\\n  }\\n\\n  @media (max-width: 500px) {\\n    grid-template-columns: 1fr;\\n    gap: 15px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 200px;\\n  margin: 30px auto 50px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { nextConnect } from '../store/index';\nimport { fetchPosts } from '../actions/index';\nimport Layout from '../components/MyLayout';\nvar Heading = styled.h1(_templateObject());\nvar PostList = styled.ul(_templateObject2());\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Latest posts\"), __jsx(PostList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      className: \"post-photo\",\n      alt: \"laptop\",\n      src: \"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), __jsx(Link, {\n      href: \"/posts/[id]`\",\n      as: \"/posts/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      title: \"Details for \".concat(post.title),\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, post.title)), __jsx(\"p\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, post.body));\n  })));\n};\n\nIndex.getInitialProps = function (_ref2) {\n  var store = _ref2.store;\n  var posts = store.dispatch(fetchPosts());\n  return posts;\n};\n\nexport default nextConnect(function (state) {\n  return state;\n})(Index);","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/index.tsx"],"names":["React","Link","styled","nextConnect","fetchPosts","Layout","Heading","h1","PostList","ul","Index","posts","map","post","id","title","body","getInitialProps","store","dispatch","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,IAAMC,OAAO,GAAGJ,MAAM,CAACK,EAAV,mBAAb;AAKA,IAAMC,QAAQ,GAAGN,MAAM,CAACO,EAAV,oBAAd;;AA2CA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsB;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAClC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,WACT;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,GAAG,EAAC,6JAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,EAAE,mBAAYD,IAAI,CAACC,EAAjB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,wBAAiBD,IAAI,CAACE,KAAtB,CAAR;AAAuC,MAAA,SAAS,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0DF,IAAI,CAACE,KAA/D,CADF,CAPF,EAUE;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBF,IAAI,CAACG,IAA7B,CAVF,CADS;AAAA,GAAV,CADH,CAFF,CADF;AAqBD,CAtBD;;AAwBAN,KAAK,CAACO,eAAN,GAAwB,iBAAqB;AAAA,MAATC,KAAS,SAATA,KAAS;AAC3C,MAAMP,KAAK,GAAGO,KAAK,CAACC,QAAN,CAAef,UAAU,EAAzB,CAAd;AACA,SAAOO,KAAP;AACD,CAHD;;AAKA,eAAeR,WAAW,CAAC,UAACiB,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAX,CAA8BV,KAA9B,CAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { nextConnect } from '../store/index';\nimport { fetchPosts } from '../actions/index';\n\nimport Layout from '../components/MyLayout';\n\nconst Heading = styled.h1`\n  width: 200px;\n  margin: 30px auto 50px;\n`;\n\nconst PostList = styled.ul`\n  list-style-type: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 50px;\n  padding: 0;\n\n  .post-photo {\n    width: 100%;\n  }\n\n  .title {\n    text-decoration: none;\n    font-weight: bold;\n    font-size: 20px;\n    color: #000;\n\n    &:active {\n      color: blue;\n    }\n  }\n\n  .content {\n    font-family: serif;\n    color: grey;\n    margin-top: 5px;\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n    gap: 30px;\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\ninterface Props {\n  posts: Post[];\n}\n\nconst Index = ({ posts }: Props) => {\n  return (\n    <Layout>\n      <Heading>Latest posts</Heading>\n      <PostList>\n        {posts.map((post: Post) => (\n          <li key={post.id}>\n            <img\n              className=\"post-photo\"\n              alt=\"laptop\"\n              src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\"\n            />\n            <br />\n            <Link href=\"/posts/[id]`\" as={`/posts/${post.id}`}>\n              <a title={`Details for ${post.title}`} className=\"title\">{post.title}</a>\n            </Link>\n            <p className=\"content\">{post.body}</p>\n          </li>\n        ))}\n      </PostList>\n    </Layout>\n  );\n}\n\nIndex.getInitialProps = function ({ store }) {\n  const posts = store.dispatch(fetchPosts());\n  return posts;\n};\n\nexport default nextConnect((state) => state)(Index);"]},"metadata":{},"sourceType":"module"}