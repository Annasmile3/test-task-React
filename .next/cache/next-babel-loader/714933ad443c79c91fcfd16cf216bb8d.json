{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nconst Post = props => {\n  const {\n    0: comment,\n    1: setComment\n  } = useState('');\n\n  const handleInputChange = e => {\n    setComment(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (comment.trim() !== '') {\n      await axios.post('https://simple-blog-api.crew.red/posts/${id}?_embed=comments', {\n        comments: {\n          body: comment\n        }\n      });\n      setComment('');\n    }\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.post.data.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.post.data.body), props.comments && __jsx(React.Fragment, null, \"Comments:\", __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, propscomments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, comment.body)))), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: comment,\n    placeholder: \"Etner the comment\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Add\")));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments');\n  const comments = commentsFromServer.data.filter(comment => comment.postId === id);\n  return {\n    post: postFromServer.data,\n    comments\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/[id].tsx"],"names":["useState","Layout","axios","Post","props","comment","setComment","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","post","comments","body","data","title","propscomments","map","id","getInitialProps","context","query","postFromServer","get","commentsFromServer","filter","postId"],"mappings":";;;AAAA,SAASA,QAAT,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAe;AAC1B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,iBAAiB,GAAIC,CAAD,IAAsC;AAC9DF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAOH,CAAP,IAAyC;AAC5DA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIP,OAAO,CAACQ,IAAR,OAAmB,EAAvB,EAA2B;AACzB,YAAMX,KAAK,CACVY,IADK,CACA,8DADA,EACgE;AAAEC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,IAAI,EAAEX;AAAR;AAAZ,OADhE,CAAN;AAEAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAPD;;AASA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACU,IAAN,CAAWG,IAAX,CAAgBC,KAArB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,KAAK,CAACU,IAAN,CAAWG,IAAX,CAAgBD,IAApB,CAFA,EAGCZ,KAAK,CAACW,QAAN,IACG,yCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,aAAa,CAACC,GAAd,CAAkBf,OAAO,IACxB;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACgB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,OAAO,CAACW,IADX,CADD,CADH,CAFF,CAJJ,EAaA;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEN,OAFT;AAGE,IAAA,WAAW,EAAC,mBAHd;AAIE,IAAA,QAAQ,EAAEE,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAOQ;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPR,CAbA,CADF;AAyBD,CAzCD;;AA0CAJ,IAAI,CAACmB,eAAL,GAAuB,gBAAeC,OAAf,EAA6B;AAClD,QAAM;AAAEF,IAAAA;AAAF,MAASE,OAAO,CAACC,KAAvB;AACA,QAAMC,cAAc,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAW,0CAAyCL,EAAG,kBAAvD,CAA7B;AACA,QAAMM,kBAAkB,GAAG,MAAMzB,KAAK,CAACwB,GAAN,CAAU,2CAAV,CAAjC;AACA,QAAMX,QAAQ,GAAGY,kBAAkB,CAACV,IAAnB,CAAwBW,MAAxB,CAA+BvB,OAAO,IAAIA,OAAO,CAACwB,MAAR,KAAmBR,EAA7D,CAAjB;AACA,SAAO;AACLP,IAAAA,IAAI,EAAEW,cAAc,CAACR,IADhB;AAELF,IAAAA;AAFK,GAAP;AAID,CATD;;AAWA,eAAeZ,IAAf","sourcesContent":["import { useState, ChangeEvent, FormEvent } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nconst Post = (props:any) => {\n  const [comment, setComment] = useState('');\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setComment(e.target.value);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (comment.trim() !== '') {\n      await axios\n      .post('https://simple-blog-api.crew.red/posts/${id}?_embed=comments', { comments: { body: comment }});\n      setComment('');\n    } \n  }  \n\n  return (\n    <Layout>\n    <h1>{props.post.data.title}</h1>\n    <p>{props.post.data.body}</p>\n    {props.comments && (\n        <>\n          Comments:\n          <ul>\n            {propscomments.map(comment => \n              <li key={comment.id}>\n                {comment.body}\n              </li>)}\n          </ul>\n        </>)}\n    <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={comment}\n              placeholder=\"Etner the comment\"\n              onChange={handleInputChange}\n            />\n            <button type=\"submit\">Add</button>\n          </form>\n  </Layout>\n  );\n}\nPost.getInitialProps = async function(context: any) {\n  const { id } = context.query;\n  const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments')\n  const comments = commentsFromServer.data.filter(comment => comment.postId === id)\n  return { \n    post: postFromServer.data,\n    comments\n  };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}