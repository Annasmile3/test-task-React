{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from \"../reducers/index\";\nexport var store = function store(initialState) {\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\n};\nexport var nextConnect = nextConnectRedux(store);","map":{"version":3,"sources":["D:/test_tasks/test-task-React/store/index.ts"],"names":["createStore","applyMiddleware","thunk","rootReducer","store","initialState","nextConnect","nextConnectRedux"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,YAAD;AAAA,SAAuBL,WAAW,CAACG,WAAD,EAAcE,YAAd,EAA4BJ,eAAe,CAACC,KAAD,CAA3C,CAAlC;AAAA,CAAd;AACP,OAAO,IAAMI,WAAW,GAAGC,gBAAgB,CAACH,KAAD,CAApC","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from \"../reducers/index\";\n\nexport const store = (initialState: any) => createStore(rootReducer, initialState, applyMiddleware(thunk));\nexport const nextConnect = nextConnectRedux(store);"]},"metadata":{},"sourceType":"module"}