{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\new.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 250px;\\n  margin: 30px auto 50px;\\n  input {\\n    width: 100%;\\n    padding: 5px;\\n    margin-bottom: 20px;\\n    border: 1px solid black;\\n    border-radius: 2px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 250px;\\n  margin: 30px auto 40px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nvar Heading = styled.h1(_templateObject());\nvar NewPostForm = styled.form(_templateObject2());\n\nvar NewPost = function NewPost() {\n  var _useState = useState(''),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(''),\n      body = _useState2[0],\n      setBody = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var handleTitleChange = function handleTitleChange(e) {\n    setError(false);\n    setTitle(e.target.value);\n  };\n\n  var handleBodyChange = function handleBodyChange(e) {\n    setError(false);\n    setBody(e.currentTarget.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n\n            if (!(title.trim() !== '' && body.trim() !== '')) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.post('https://simple-blog-api.crew.red/posts', {\n              title: title,\n              body: body\n            }));\n\n          case 4:\n            setTitle('');\n            setBody('');\n            _context.next = 9;\n            break;\n\n          case 8:\n            setError(true);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Create new post\"), __jsx(NewPostForm, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: title,\n    name: \"title\",\n    placeholder: \"Etner the title\",\n    onChange: handleTitleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), error && title.trim() === '' && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Tht title is empty\"), __jsx(\"textarea\", {\n    cols: 40,\n    rows: 5,\n    value: body,\n    name: \"body\",\n    placeholder: \"Enter the post\",\n    onChange: handleBodyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), error && body.trim() === '' && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Tht post field is empty\"), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Create\")));\n};\n\nexport default NewPost;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/new.tsx"],"names":["Layout","axios","useState","styled","Heading","h1","NewPostForm","form","NewPost","title","setTitle","body","setBody","error","setError","handleTitleChange","e","target","value","handleBodyChange","currentTarget","handleSubmit","preventDefault","trim","post"],"mappings":"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","sourcesContent":["import Layout from '../../components/MyLayout';\nimport axios  from 'axios';\nimport { useState, ChangeEvent, FormEvent } from 'react';\nimport styled from 'styled-components'\n\nconst Heading = styled.h1`\n  width: 250px;\n  margin: 30px auto 40px;\n`\nconst NewPostForm = styled.form`\n  width: 250px;\n  margin: 30px auto 50px;\n  input {\n    width: 100%;\n    padding: 5px;\n    margin-bottom: 20px;\n    border: 1px solid black;\n    border-radius: 2px;\n  }\n`\n\nconst NewPost = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleTitleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setError(false);\n    setTitle(e.target.value);\n  };\n\n  const handleBodyChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setError(false);\n    setBody(e.currentTarget.value);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    if (title.trim() !== '' &&  body.trim() !== '') {\n      await axios\n        .post('https://simple-blog-api.crew.red/posts', { title, body });\n      setTitle('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  }  \n    return(\n      <Layout>\n        <Heading>Create new post</Heading>\n          <NewPostForm onSubmit={handleSubmit}>\n            <div>\n            <input\n              type=\"text\"\n              value={title}\n              name=\"title\"\n              placeholder=\"Etner the title\"\n              onChange={handleTitleChange}\n            />\n            </div>\n            {(error && title.trim() === '') && <div>Tht title is empty</div>}\n            <textarea cols={40} rows={5}\n              value={body} \n              name=\"body\"\n              placeholder=\"Enter the post\" \n              onChange={handleBodyChange} \n            />\n            {(error && body.trim() === '') && <div>Tht post field is empty</div>}\n            <button type=\"submit\">Create</button>\n          </NewPostForm>\n      </Layout>\n    );\n  };\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}