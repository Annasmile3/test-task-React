{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\new.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport { useState } from 'react';\n\nconst NewPost = () => {\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState(fals);\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleBodyChange = e => {\n    setBody(e.currentTarget.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (title.trim().length > 0 && body.trim().length > 0) {\n      await axios.post('https://simple-blog-api.crew.red/posts', {\n        data: {\n          title,\n          body\n        }\n      });\n      setTitle('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: title,\n    placeholder: \"title\",\n    onChange: handleTitleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"textarea\", {\n    value: body,\n    placeholder: \"post\",\n    onChange: handleBodyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Create\")));\n}; // Post.getInitialProps = async function(context: any) {\n//   const { id } = context.query;\n//   const res = await axios.post(`https://simple-blog-api.crew.red/posts/`);\n//   return { post: res.data };\n// };\n\n\nexport default NewPost;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/new.tsx"],"names":["Layout","axios","useState","NewPost","title","setTitle","body","setBody","error","setError","fals","handleTitleChange","e","target","value","handleBodyChange","currentTarget","handleSubmit","preventDefault","trim","length","post","data"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,SAASC,QAAT,QAAiD,OAAjD;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACI,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAACQ,IAAD,CAAlC;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAsC;AAC9DP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,CAAD,IAAyC;AAChEL,IAAAA,OAAO,CAACK,CAAC,CAACI,aAAF,CAAgBF,KAAjB,CAAP;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAG,MAAOL,CAAP,IAAyC;AAC5DA,IAAAA,CAAC,CAACM,cAAF;;AAEA,QAAId,KAAK,CAACe,IAAN,GAAaC,MAAb,GAAsB,CAAtB,IAA2Bd,IAAI,CAACa,IAAL,GAAYC,MAAZ,GAAqB,CAApD,EAAuD;AACrD,YAAMnB,KAAK,CACRoB,IADG,CACE,wCADF,EAC4C;AAAEC,QAAAA,IAAI,EAAC;AAAElB,UAAAA,KAAF;AAASE,UAAAA;AAAT;AAAP,OAD5C,CAAN;AAEAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KALD,MAKO;AACLE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAXD;;AAYE,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEb,KAFT;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,QAAQ,EAAEO,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AACE,IAAA,KAAK,EAAEL,IADT;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,QAAQ,EAAES,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAYE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CADJ,CADF;AAkBD,CA3CH,C,CA6CA;AACA;AACA;AAEA;AACA;;;AAEA,eAAeZ,OAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport axios  from 'axios';\nimport { useState, ChangeEvent, FormEvent } from 'react';\n\nconst NewPost = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [error, setError] = useState(fals);\n\n  const handleTitleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  };\n\n  const handleBodyChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBody(e.currentTarget.value);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    if (title.trim().length > 0 && body.trim().length > 0) {\n      await axios\n        .post('https://simple-blog-api.crew.red/posts', { data:{ title, body }});\n      setTitle('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  }  \n    return(\n      <Layout>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={title}\n              placeholder=\"title\"\n              onChange={handleTitleChange}\n            />\n            <textarea \n              value={body} \n              placeholder=\"post\" \n              onChange={handleBodyChange} \n            />\n            <button type=\"submit\">Create</button>\n          </form>\n      </Layout>\n    );\n  };\n\n// Post.getInitialProps = async function(context: any) {\n//   const { id } = context.query;\n//   const res = await axios.post(`https://simple-blog-api.crew.red/posts/`);\n\n//   return { post: res.data };\n// };\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}