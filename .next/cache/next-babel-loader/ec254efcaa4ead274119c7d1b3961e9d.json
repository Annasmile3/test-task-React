{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 90%;\\n  padding: 5px 10px;\\n  background-color: #e6e6e6;\\n  border-radius: 15px;\\n  border: none;\\n  outline: none;\\n\\n  .post-photo {\\n    width: 50%;\\n    margin-right: 5%;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin: 30px 0 30px 15px;\\n\\n  .post-photo {\\n    width: 50%;\\n    margin-right: 5%;\\n  }\\n\\n  p {\\n    font-family: serif;\\n    color: grey;\\n  }\\n  \\n  form {\\n    position: relative;\\n\\n    button {\\n      position: absolute;\\n      top: 4px;\\n      right: 10%;\\n      background-color: #e6e6e6;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n    }\\n  }\\n\\n  @media (max-width: 768px) {\\n    flex-wrap: wrap;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { nextConnect } from '../../store/index';\nimport { fetchPost } from '../../actions';\nimport styled from 'styled-components';\nimport { createComment } from '../../api/client';\nimport Layout from '../../components/MyLayout';\nvar PostDetails = styled.section(_templateObject());\nvar CommentInput = styled.input(_templateObject2());\nvar CommentsList = styled.ul(_templateObject3());\n\nvar Post = function Post(_ref) {\n  var store = _ref.store,\n      id = _ref.id;\n\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var _useState2 = useState(props.comments),\n      commentList = _useState2[0],\n      setComments = _useState2[1];\n\n  var handleInputChange = function handleInputChange(_ref2) {\n    var target = _ref2.target;\n    setComment(target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (comment.trim() !== '') {\n      createComment({\n        body: comment,\n        postId: props.post.id\n      });\n      setComment('');\n      setComments([].concat(_toConsumableArray(commentList), [{\n        body: comment,\n        postId: props.post.id\n      }]));\n    }\n  }; // const { post: { title, body } } = props;\n\n\n  var post = props.store.dispatch(fetchPost(props.id));\n  console.log(post);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(PostDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"post-photo\",\n    alt: \"laptop\",\n    src: \"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          return _context.abrupt(\"return\", {\n            id: id\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default nextConnect(function (state) {\n  return state;\n})(Post);","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/[id].tsx"],"names":["React","useState","nextConnect","fetchPost","styled","createComment","Layout","PostDetails","section","CommentInput","input","CommentsList","ul","Post","store","id","comment","setComment","props","comments","commentList","setComments","handleInputChange","target","value","handleSubmit","e","preventDefault","trim","body","postId","post","dispatch","console","log","getInitialProps","context","query","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAwD,OAAxD;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAA+BC,aAA/B,QAAoD,kBAApD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,IAAMC,WAAW,GAAGH,MAAM,CAACI,OAAV,mBAAjB;AAkCA,IAAMC,YAAY,GAAGL,MAAM,CAACM,KAAV,oBAAlB;AAcA,IAAMC,YAAY,GAAGP,MAAM,CAACQ,EAAV,oBAAlB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAiB;AAAA,MAAfC,KAAe,QAAfA,KAAe;AAAA,MAARC,EAAQ,QAARA,EAAQ;;AAAA,kBACEd,QAAQ,CAAC,EAAD,CADV;AAAA,MACrBe,OADqB;AAAA,MACZC,UADY;;AAAA,mBAEOhB,QAAQ,CAACiB,KAAK,CAACC,QAAP,CAFf;AAAA,MAErBC,WAFqB;AAAA,MAERC,WAFQ;;AAI5B,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,QAA+C;AAAA,QAA5CC,MAA4C,SAA5CA,MAA4C;AACvEN,IAAAA,UAAU,CAACM,MAAM,CAACC,KAAR,CAAV;AACD,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAmC;AACtDA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIX,OAAO,CAACY,IAAR,OAAmB,EAAvB,EAA2B;AACzBvB,MAAAA,aAAa,CAAC;AAAEwB,QAAAA,IAAI,EAAEb,OAAR;AAAiBc,QAAAA,MAAM,EAAEZ,KAAK,CAACa,IAAN,CAAWhB;AAApC,OAAD,CAAb;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAI,MAAAA,WAAW,8BAAKD,WAAL,IAAkB;AAAES,QAAAA,IAAI,EAAEb,OAAR;AAAiBc,QAAAA,MAAM,EAAEZ,KAAK,CAACa,IAAN,CAAWhB;AAApC,OAAlB,GAAX;AACD;AACF,GAPD,CAR4B,CAgB5B;;;AACA,MAAMgB,IAAI,GAAGb,KAAK,CAACJ,KAAN,CAAYkB,QAAZ,CAAqB7B,SAAS,CAACe,KAAK,CAACH,EAAP,CAA9B,CAAb;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,GAAG,EAAC,QAFN;AAGE,IAAA,GAAG,EAAC,6JAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AA+BD,CAlDD;;AAoDAlB,IAAI,CAACsB,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbrB,UAAAA,EADa,GACNqB,OAAO,CAACC,KADF,CACbtB,EADa;AAAA,2CAGd;AACLA,YAAAA,EAAE,EAAFA;AADK,WAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeb,WAAW,CAAC,UAACoC,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAX,CAA8BzB,IAA9B,CAAf","sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { NextPageContext } from 'next';\nimport { nextConnect } from '../../store/index';\nimport { fetchPost } from '../../actions';\nimport styled from 'styled-components';\nimport { getPost, getComments, createComment } from '../../api/client';\nimport Layout from '../../components/MyLayout';\n\nconst PostDetails = styled.section`\n  display: flex;\n  margin: 30px 0 30px 15px;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n\n  p {\n    font-family: serif;\n    color: grey;\n  }\n  \n  form {\n    position: relative;\n\n    button {\n      position: absolute;\n      top: 4px;\n      right: 10%;\n      background-color: #e6e6e6;\n      border: none;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n\n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n`;\n\n\nconst CommentInput = styled.input`\n  width: 90%;\n  padding: 5px 10px;\n  background-color: #e6e6e6;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n`;\n\nconst CommentsList = styled.ul`\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\n`;\n\nconst Post = ({store, id}) => {\n  const [comment, setComment] = useState('');\n  const [commentList, setComments] = useState(props.comments);\n\n  const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setComment(target.value);\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (comment.trim() !== '') {\n      createComment({ body: comment, postId: props.post.id } as Comment);\n      setComment('');\n      setComments([...commentList, { body: comment, postId: props.post.id }]);\n    }\n  };\n  // const { post: { title, body } } = props;\n  const post = props.store.dispatch(fetchPost(props.id));\n  console.log(post);\n  return (\n    <Layout>\n      <PostDetails>\n        <img\n          className=\"post-photo\"\n          alt=\"laptop\"\n          src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\"\n        />\n        {/* <div>\n          <h1>{title}</h1>\n          <p>{body}</p>\n          <form onSubmit={handleSubmit}>\n            <CommentInput\n              type=\"text\"\n              value={comment}\n              placeholder=\"Comment...\"\n              onChange={handleInputChange}\n            />\n            <button type=\"submit\">Add</button>\n          </form>\n          <CommentsList>\n            {commentList.map((item: Comment) => (\n              <li key={item.id}>\n                {item.body}\n              </li>\n            ))}\n          </CommentsList>\n        </div> */}\n      </PostDetails>\n    </Layout>\n  );\n};\n\nPost.getInitialProps = async function (context: NextPageContext) {\n  const { id } = context.query;\n\n  return {\n    id\n  };\n};\n\nexport default nextConnect((state) => state)(Post)\n"]},"metadata":{},"sourceType":"module"}