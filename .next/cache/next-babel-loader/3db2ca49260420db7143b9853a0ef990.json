{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nconst Post = props => {\n  const {\n    0: comment,\n    1: setComment\n  } = useState('');\n\n  const handleInputChange = e => {\n    setComment(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (title.trim().length > 0 && body.trim().length > 0) {\n      await axios.post('https://simple-blog-api.crew.red/posts', {\n        comments: []\n      });\n      setComment('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.post.data.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.post.data.body), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.post.data.comments && props.post.data.comments.body), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: title,\n    placeholder: \"Etner the comment\",\n    onChange: handleTitleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Add\")));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  return {\n    post: res.data\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/[id].tsx"],"names":["useState","Layout","axios","Post","props","comment","setComment","handleInputChange","e","target","value","handleSubmit","preventDefault","title","trim","length","body","post","comments","setBody","setError","data","handleTitleChange","getInitialProps","context","id","query","res","get"],"mappings":";;;AAAA,SAASA,QAAT,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAe;AAC1B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,iBAAiB,GAAIC,CAAD,IAAsC;AAC9DF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAOH,CAAP,IAAyC;AAC5DA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAIC,KAAK,CAACC,IAAN,GAAaC,MAAb,GAAsB,CAAtB,IAA2BC,IAAI,CAACF,IAAL,GAAYC,MAAZ,GAAqB,CAApD,EAAuD;AACrD,YAAMb,KAAK,CACRe,IADG,CACE,wCADF,EAC4C;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAD5C,CAAN;AAEEZ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACFa,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KALD,MAKO;AACLC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAXD;;AAYA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,KAAK,CAACa,IAAN,CAAWI,IAAX,CAAgBR,KAArB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,KAAK,CAACa,IAAN,CAAWI,IAAX,CAAgBL,IAApB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,KAAK,CAACa,IAAN,CAAWI,IAAX,CAAgBH,QAAhB,IAA4Bd,KAAK,CAACa,IAAN,CAAWI,IAAX,CAAgBH,QAAhB,CAAyBF,IAAzD,CAHA,EAIA;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEE,KAFT;AAGE,IAAA,WAAW,EAAC,mBAHd;AAIE,IAAA,QAAQ,EAAES,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAOQ;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPR,CAJA,CADF;AAgBD,CAnCD;;AAoCAnB,IAAI,CAACoB,eAAL,GAAuB,gBAAeC,OAAf,EAA6B;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CAAW,0CAAyCH,EAAG,kBAAvD,CAAlB;AAEA,SAAO;AAAER,IAAAA,IAAI,EAAEU,GAAG,CAACN;AAAZ,GAAP;AACD,CALD;;AAOA,eAAelB,IAAf","sourcesContent":["import { useState, ChangeEvent, FormEvent } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nconst Post = (props:any) => {\n  const [comment, setComment] = useState('');\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setComment(e.target.value);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    if (title.trim().length > 0 && body.trim().length > 0) {\n      await axios\n        .post('https://simple-blog-api.crew.red/posts', { comments: []});\n        setComment('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  }  \n  return (\n    <Layout>\n    <h1>{props.post.data.title}</h1>\n    <p>{props.post.data.body}</p>\n    <p>{props.post.data.comments && props.post.data.comments.body}</p>\n    <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={title}\n              placeholder=\"Etner the comment\"\n              onChange={handleTitleChange}\n            />\n            <button type=\"submit\">Add</button>\n          </form>\n  </Layout>\n  );\n}\nPost.getInitialProps = async function(context: any) {\n  const { id } = context.query;\n  const res = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n\n  return { post: res.data };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}