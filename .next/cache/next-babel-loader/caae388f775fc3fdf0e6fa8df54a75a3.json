{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 90%;\\n  padding: 5px 10px;\\n  background-color: #e6e6e6;\\n  border-radius: 15px;\\n  border: none;\\n  outline: none;\\n\\n  .post-photo {\\n    width: 50%;\\n    margin-right: 5%;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-top: 30px;\\n  margin-left: 15px;\\n\\n  .post-photo {\\n    width: 50%;\\n    margin-right: 5%;\\n  }\\n\\n  form {\\n    position: relative;\\n\\n    button {\\n      position: absolute;\\n      top: 3px;\\n      right: 10%;\\n      background-color: #e6e6e6;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Layout from '../../components/MyLayout';\nvar PostDetails = styled.section(_templateObject());\nvar CommentInput = styled.input(_templateObject2());\nvar CommentsList = styled.ul(_templateObject3());\n\nvar Post = function Post(props) {\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var handleInputChange = function handleInputChange(_ref) {\n    var target = _ref.target;\n    setComment(target.value);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(comment.trim() !== '')) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('https://simple-blog-api.crew.red/comments', {\n              body: comment,\n              postId: props.post.id\n            }));\n\n          case 3:\n            setComment('');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _ref2,\n      title = _ref2.title,\n      body = _ref2.body;\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(PostDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"post\",\n    src: \"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n    alt: \"post photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.post.body), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(CommentInput, {\n    type: \"text\",\n    value: comment,\n    placeholder: \"Comment...\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Add\")), __jsx(CommentsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, props.comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, comment.body);\n  })))));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, postFromServer, commentsFromServer, comments;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = context.query.id;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id, \"?_embed=comments\")));\n\n        case 3:\n          postFromServer = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/comments'));\n\n        case 6:\n          commentsFromServer = _context2.sent;\n          comments = commentsFromServer.data.filter(function (comment) {\n            return comment.postId === +id;\n          });\n          return _context2.abrupt(\"return\", {\n            post: postFromServer.data,\n            comments: comments\n          });\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/[id].tsx"],"names":["React","useState","axios","styled","Layout","PostDetails","section","CommentInput","input","CommentsList","ul","Post","props","comment","setComment","handleInputChange","target","value","handleSubmit","trim","post","body","postId","id","title","comments","map","getInitialProps","context","query","get","postFromServer","commentsFromServer","data","filter"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { NextPageContext } from 'next';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Layout from '../../components/MyLayout';\n\nconst PostDetails = styled.section`\n  display: flex;\n  margin-top: 30px;\n  margin-left: 15px;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n\n  form {\n    position: relative;\n\n    button {\n      position: absolute;\n      top: 3px;\n      right: 10%;\n      background-color: #e6e6e6;\n      border: none;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n`;\n\nconst CommentInput = styled.input`\n  width: 90%;\n  padding: 5px 10px;\n  background-color: #e6e6e6;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n`;\n\nconst CommentsList = styled.ul`\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\n`;\n\nconst Post = (props:any) => {\n  const [comment, setComment] = useState('');\n\n  const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setComment(target.value);\n  };\n\n  const handleSubmit = async () => {\n    if (comment.trim() !== '') {\n      await axios\n        .post('https://simple-blog-api.crew.red/comments', { body: comment, postId: props.post.id });\n      setComment('');\n    }\n  };\n  \n  const { title, body }\n  return (\n    <Layout>\n      <PostDetails>\n        <img\n          className=\"post\"\n          src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\"\n          alt=\"post photo\"\n        />\n        <div>\n          <h1>{props.post.title}</h1>\n          <p>{props.post.body}</p>\n          <form onSubmit={handleSubmit}>\n            <CommentInput\n              type=\"text\"\n              value={comment}\n              placeholder=\"Comment...\"\n              onChange={handleInputChange}\n            />\n          <button type=\"submit\">Add</button>\n          </form>\n          <CommentsList>\n            {props.comments.map((comment: Comment) =>\n              <li key={comment.id}>\n                {comment.body}\n              </li>)}\n          </CommentsList>\n        </div> \n      </PostDetails>\n   </Layout>\n  );\n}\n\nPost.getInitialProps = async function(context: NextPageContext) {\n  const { id } = context.query;\n  const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments')\n  const comments = commentsFromServer.data.filter((comment: Comment) => comment.postId === +id)\n  return { \n    post: postFromServer.data,\n    comments: comments\n  };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}