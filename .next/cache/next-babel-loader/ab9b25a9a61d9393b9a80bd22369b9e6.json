{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { getPost, createComment } from '../../client';\nimport Layout from '../../components/MyLayout';\nconst PostDetails = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 30px 0 30px 15px;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n\n  p {\n    font-family: serif;\n    color: grey;\n  }\n  \n  form {\n    position: relative;\n\n    button {\n      position: absolute;\n      top: 4px;\n      right: 10%;\n      background-color: #e6e6e6;\n      border: none;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n`;\nconst CommentInput = styled.input`\n  width: 90%;\n  padding: 5px 10px;\n  background-color: #e6e6e6;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n`;\nconst CommentsList = styled.ul`\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\n`;\n\nconst Post = props => {\n  const {\n    0: comment,\n    1: setComment\n  } = useState('');\n\n  const handleInputChange = ({\n    target\n  }) => {\n    setComment(target.value);\n  };\n\n  const handleSubmit = async () => {\n    if (comment.trim() !== '') {\n      createComment({\n        body: comment,\n        postId: props.post.id\n      });\n      setComment('');\n    }\n  };\n\n  debugger;\n  const {\n    post: {\n      title,\n      body\n    },\n    comments\n  } = props;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(PostDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"post-photo\",\n    alt: \"laptop\",\n    src: \"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, body), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(CommentInput, {\n    type: \"text\",\n    value: comment,\n    placeholder: \"Comment...\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Add\")), __jsx(CommentsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, comments.map(item => __jsx(\"li\", {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, item.body))))));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const post = getPost(id);\n  debugger; // const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments');\n  const comments = commentsFromServer.data.filter(comment => comment.postId === +id);\n  return {\n    post,\n    comments\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/[id].tsx"],"names":["React","useState","axios","styled","getPost","createComment","Layout","PostDetails","section","CommentInput","input","CommentsList","ul","Post","props","comment","setComment","handleInputChange","target","value","handleSubmit","trim","body","postId","post","id","title","comments","map","item","getInitialProps","context","query","commentsFromServer","get","data","filter"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent } from 'react';\nimport { NextPageContext } from 'next';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { getPost, createComment } from '../../client';\nimport Layout from '../../components/MyLayout';\n\nconst PostDetails = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 30px 0 30px 15px;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n\n  p {\n    font-family: serif;\n    color: grey;\n  }\n  \n  form {\n    position: relative;\n\n    button {\n      position: absolute;\n      top: 4px;\n      right: 10%;\n      background-color: #e6e6e6;\n      border: none;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n`;\n\nconst CommentInput = styled.input`\n  width: 90%;\n  padding: 5px 10px;\n  background-color: #e6e6e6;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n`;\n\nconst CommentsList = styled.ul`\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\n`;\n\nconst Post = (props:any) => {\n  const [comment, setComment] = useState('');\n\n  const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setComment(target.value);\n  };\n\n  const handleSubmit = async () => {\n    if (comment.trim() !== '') {\n      createComment({ body: comment, postId: props.post.id } as Comment);\n      setComment('');\n    }\n  };\n  debugger;\n  const { post: { title, body }, comments } = props;\n\n  return (\n    <Layout>\n      <PostDetails>\n        <img\n          className=\"post-photo\"\n          alt=\"laptop\"\n          src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\"\n        />\n        <div>\n          <h1>{title}</h1>\n          <p>{body}</p>\n          <form onSubmit={handleSubmit}>\n            <CommentInput\n              type=\"text\"\n              value={comment}\n              placeholder=\"Comment...\"\n              onChange={handleInputChange}\n            />\n            <button type=\"submit\">Add</button>\n          </form>\n          <CommentsList>\n            {comments.map((item: Comment) => (\n              <li key={item.id}>\n                {item.body}\n              </li>\n            ))}\n          </CommentsList>\n        </div>\n      </PostDetails>\n    </Layout>\n  );\n};\n\nPost.getInitialProps = async function (context: NextPageContext) {\n  const { id } = context.query;\n  const post = getPost(id);\n  debugger\n  // const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments');\n  const comments = commentsFromServer.data.filter((comment: Comment) => comment.postId === +id);\n  return {\n    post,\n    comments,\n  };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}