{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\new.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { nextConnect } from '../../store/index';\nimport { addPost } from '../../actions';\nimport Layout from '../../components/MyLayout';\nconst Heading = styled.h1`\n  width: 250px;\n  margin: 30px auto 40px;\n`;\nconst NewPostForm = styled.form`\n  width: 250px;\n  margin: 30px auto 50px;\n  text-align: center;\n\n  input {\n    width: 100%;\n     padding: 5px;\n     border: 1px solid black;\n     border-radius: 2px;\n\n    &:focus {\n     background-color: #e6e6e6;\n    }\n  }\n\n  textarea {\n    width: 100%;\n    padding: 5px;\n    margin: 20px auto 0;\n    border: 1px solid black;\n    border-radius: 2px;\n  }\n  .error {\n    text-align: left;\n    color: red;\n  }\n`;\nconst SubmitButton = styled.button`\n  width: 80px;\n  padding: 5px;\n  text-align: center;\n  margin: 20px auto 0;\n  background-color: #00cc66;\n  color: #fff;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nconst NewPost = () => {\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const handleTitleChange = e => {\n    setError(false);\n    setTitle(e.target.value);\n  };\n\n  const handleBodyChange = e => {\n    setError(false);\n    setBody(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (title.trim() !== '' && body.trim() !== '') {\n      addPost({\n        title,\n        body\n      });\n      setTitle('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Create new post\"), __jsx(NewPostForm, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: title,\n    name: \"title\",\n    placeholder: \"Enter the title\",\n    onChange: handleTitleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), error && title.trim() === '' && __jsx(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"The title is empty\"), __jsx(\"textarea\", {\n    rows: 5,\n    value: body,\n    name: \"body\",\n    placeholder: \"Enter the post\",\n    onChange: handleBodyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), error && body.trim() === '' && __jsx(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"The post field is empty\"), __jsx(SubmitButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Create\")));\n};\n\nexport default nextConnect(state => state)(NewPost);","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/new.tsx"],"names":["React","useState","styled","nextConnect","addPost","Layout","Heading","h1","NewPostForm","form","SubmitButton","button","NewPost","title","setTitle","body","setBody","error","setError","handleTitleChange","e","target","value","handleBodyChange","handleSubmit","preventDefault","trim","state"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport styled from 'styled-components';\nimport { nextConnect } from '../../store/index';\nimport { addPost } from '../../actions';\nimport Layout from '../../components/MyLayout';\nconst Heading = styled.h1`\n  width: 250px;\n  margin: 30px auto 40px;\n`;\n\nconst NewPostForm = styled.form`\n  width: 250px;\n  margin: 30px auto 50px;\n  text-align: center;\n\n  input {\n    width: 100%;\n     padding: 5px;\n     border: 1px solid black;\n     border-radius: 2px;\n\n    &:focus {\n     background-color: #e6e6e6;\n    }\n  }\n\n  textarea {\n    width: 100%;\n    padding: 5px;\n    margin: 20px auto 0;\n    border: 1px solid black;\n    border-radius: 2px;\n  }\n  .error {\n    text-align: left;\n    color: red;\n  }\n`;\n\nconst SubmitButton = styled.button`\n  width: 80px;\n  padding: 5px;\n  text-align: center;\n  margin: 20px auto 0;\n  background-color: #00cc66;\n  color: #fff;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nconst NewPost = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleTitleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setError(false);\n    setTitle(e.target.value);\n  };\n\n  const handleBodyChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setError(false);\n    setBody(e.target.value);\n  };\n\n  const handleSubmit =  (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (title.trim() !== '' && body.trim() !== '') {\n      addPost({ title, body });\n      setTitle('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  };\n  return (\n    <Layout>\n      <Heading>Create new post</Heading>\n      <NewPostForm onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={title}\n          name=\"title\"\n          placeholder=\"Enter the title\"\n          onChange={handleTitleChange}\n        />\n        {(error && title.trim() === '') && <div className=\"error\">The title is empty</div>}\n        <textarea\n          rows={5}\n          value={body}\n          name=\"body\"\n          placeholder=\"Enter the post\"\n          onChange={handleBodyChange}\n        />\n        {(error && body.trim() === '') && <div className=\"error\">The post field is empty</div>}\n        <SubmitButton type=\"submit\">Create</SubmitButton>\n      </NewPostForm>\n    </Layout>\n  );\n};\n\nexport default nextConnect((state) => state)(NewPost)\n"]},"metadata":{},"sourceType":"module"}