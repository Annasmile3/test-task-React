{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  list-style-type: none;\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr;\\n  gap: 50px;\\n  padding: 0;\\n\\n  .post-photo {\\n    width: 100%;\\n  }\\n\\n  .title {\\n    text-decoration: none;\\n    font-weight: bold;\\n    font-size: 20px;\\n    color: #000;\\n\\n    &:active {\\n      color: blue;\\n    }\\n  }\\n\\n  .content {\\n    font-family: serif;\\n    color: grey;\\n    margin-top: 5px;\\n  }\\n\\n  @media (max-width: 768px) {\\n    grid-template-columns: 1fr 1fr;\\n    gap: 30px;\\n  }\\n\\n  @media (max-width: 500px) {\\n    grid-template-columns: 1fr;\\n    gap: 15px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 200px;\\n  margin: 30px auto 50px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { fetchPosts } from '../reducers/';\nimport { store } from '../store/index';\nimport Layout from '../components/MyLayout';\nvar Heading = styled.h1(_templateObject());\nvar PostList = styled.ul(_templateObject2());\n\nvar Index = function Index(props) {\n  var Component = props.Component,\n      pageProps = props.pageProps,\n      store = props.store; // const { posts } = props;\n\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Latest posts\")));\n};\n\nIndex.getInitialProps = function _callee() {\n  var posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(store.dispatch(fetchPosts()));\n\n        case 2:\n          posts = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: posts\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default withRedux(store)(Index); // export default Index;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/index.tsx"],"names":["React","styled","fetchPosts","store","Layout","Heading","h1","PostList","ul","Index","props","Component","pageProps","getInitialProps","dispatch","posts","withRedux"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,IAAMC,OAAO,GAAGJ,MAAM,CAACK,EAAV,mBAAb;AAKA,IAAMC,QAAQ,GAAGN,MAAM,CAACO,EAAV,oBAAd;;AA2CA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAgB;AAAA,MACrBC,SADqB,GACUD,KADV,CACrBC,SADqB;AAAA,MACVC,SADU,GACUF,KADV,CACVE,SADU;AAAA,MACCT,KADD,GACUO,KADV,CACCP,KADD,EAE5B;;AACA,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADA,CADF;AAuBD,CA1BD;;AA4BAM,KAAK,CAACI,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFV,KAAK,CAACW,QAAN,CAAeZ,UAAU,EAAzB,CADE;;AAAA;AAChBa,UAAAA,KADgB;AAAA,2CAEf;AAAEA,YAAAA,KAAK,EAALA;AAAF,WAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAKA,eAAeC,SAAS,CAACb,KAAD,CAAT,CAAiBM,KAAjB,CAAf,C,CACA","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { nextConnect } from '../store/index';\nimport { fetchPosts } from '../reducers/'\n\nimport { store } from '../store/index'\nimport Layout from '../components/MyLayout';\n\nconst Heading = styled.h1`\n  width: 200px;\n  margin: 30px auto 50px;\n`;\n\nconst PostList = styled.ul`\n  list-style-type: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 50px;\n  padding: 0;\n\n  .post-photo {\n    width: 100%;\n  }\n\n  .title {\n    text-decoration: none;\n    font-weight: bold;\n    font-size: 20px;\n    color: #000;\n\n    &:active {\n      color: blue;\n    }\n  }\n\n  .content {\n    font-family: serif;\n    color: grey;\n    margin-top: 5px;\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n    gap: 30px;\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\ninterface Props {\n  posts: Post[];\n}\n\nconst Index = (props: any) => {\n  const {Component, pageProps, store} = props;\n  // const { posts } = props;\n  return (\n    <Provider store={store}>\n    <Layout>\n      <Heading>Latest posts</Heading>\n      {/* <PostList>\n        {posts.map((post: Post) => (\n          <li key={post.id}>\n            <img\n              className=\"post-photo\"\n              alt=\"laptop\"\n              src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\"\n            />\n            <br />\n            <Link href=\"/posts/[id]`\" as={`/posts/${post.id}`}>\n              <a title={`Details for ${post.title}`} className=\"title\">{post.title}</a>\n            </Link>\n            <p className=\"content\">{post.body}</p>\n          </li>\n        ))}\n      </PostList> */}\n    </Layout>\n    </Provider>\n  );\n}\n\nIndex.getInitialProps = async function () {\n  const posts = await store.dispatch(fetchPosts());\n  return { posts };\n};\n\nexport default withRedux(store)(Index);\n// export default Index;"]},"metadata":{},"sourceType":"module"}