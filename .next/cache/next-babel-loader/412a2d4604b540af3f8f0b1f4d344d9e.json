{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { nextConnect } from '../../store/index';\nimport { fetchPost, fetchComments } from '../../actions';\nimport styled from 'styled-components';\nimport Layout from '../../components/MyLayout';\nconst PostDetails = styled.section`\n  display: flex;\n  margin: 30px 0 30px 15px;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n\n  p {\n    font-family: serif;\n    color: grey;\n  }\n  \n  form {\n    position: relative;\n\n    button {\n      position: absolute;\n      top: 4px;\n      right: 10%;\n      background-color: #e6e6e6;\n      border: none;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n\n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n`;\nconst CommentInput = styled.input`\n  width: 90%;\n  padding: 5px 10px;\n  background-color: #e6e6e6;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n`;\nconst CommentsList = styled.ul`\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\n`;\n\nconst Post = () => {\n  // const [comment, setComment] = useState('');\n  // const [commentList, setComments] = useState(props.comments);\n  // const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n  //   setComment(target.value);\n  // };\n  // const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n  //   e.preventDefault();\n  //   if (comment.trim() !== '') {\n  //     createComment({ body: comment, postId: props.post.id } as Comment);\n  //     setComment('');\n  //     setComments([...commentList, { body: comment, postId: props.post.id }]);\n  //   }\n  // };\n  // const { post: { title, body } } = props;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(PostDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"post-photo\",\n    alt: \"laptop\",\n    src: \"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n}; // Post.getInitialProps = async function (context: NextPageContext) {\n//   const { id } = context.query;\n//   const post = store.dispatch(fetchPost(id));\n//   console.log(post);\n//   return {\n//     id\n//   };\n// };\n\n\nPost.getInitialProps = async function (ctx) {\n  const {\n    id\n  } = ctx.query;\n  const post = await ctx.store.dispatch(fetchPost(id));\n  const comments = await ctx.store.dispatch(fetchComments());\n  const filteredcomments = comments.filter(comment => comment.postId === +id);\n  return {\n    post,\n    comments: filteredcomments\n  };\n};\n\nexport default nextConnect(state => state)(Post);","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/[id].tsx"],"names":["React","nextConnect","fetchPost","fetchComments","styled","Layout","PostDetails","section","CommentInput","input","CommentsList","ul","Post","getInitialProps","ctx","id","query","post","store","dispatch","comments","filteredcomments","filter","comment","postId","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,eAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,OAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAnC;AAkCA,MAAMC,YAAY,GAAGJ,MAAM,CAACK,KAAM;;;;;;;;;;;;CAAlC;AAcA,MAAMC,YAAY,GAAGN,MAAM,CAACO,EAAG;;CAA/B;;AAIA,MAAMC,IAAI,GAAG,MAAM;AACjB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,GAAG,EAAC,QAFN;AAGE,IAAA,GAAG,EAAC,6JAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AA+BD,CAjDD,C,CAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,IAAI,CAACC,eAAL,GAAuB,gBAAgBC,GAAhB,EAAqB;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAASD,GAAG,CAACE,KAAnB;AACA,QAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,KAAJ,CAAUC,QAAV,CAAmBjB,SAAS,CAACa,EAAD,CAA5B,CAAnB;AACA,QAAMK,QAAQ,GAAG,MAAMN,GAAG,CAACI,KAAJ,CAAUC,QAAV,CAAmBhB,aAAa,EAAhC,CAAvB;AACA,QAAMkB,gBAAgB,GAAGD,QAAQ,CAACE,MAAT,CAAiBC,OAAD,IAAsBA,OAAO,CAACC,MAAR,KAAmB,CAACT,EAA1D,CAAzB;AAEA,SAAO;AACLE,IAAAA,IADK;AAELG,IAAAA,QAAQ,EAAEC;AAFL,GAAP;AAID,CAVD;;AAWA,eAAepB,WAAW,CAAEwB,KAAD,IAAWA,KAAZ,CAAX,CAA8Bb,IAA9B,CAAf","sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { nextConnect } from '../../store/index';\nimport { fetchPost, fetchComments } from '../../actions';\nimport styled from 'styled-components';\nimport Layout from '../../components/MyLayout';\n\nconst PostDetails = styled.section`\n  display: flex;\n  margin: 30px 0 30px 15px;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n\n  p {\n    font-family: serif;\n    color: grey;\n  }\n  \n  form {\n    position: relative;\n\n    button {\n      position: absolute;\n      top: 4px;\n      right: 10%;\n      background-color: #e6e6e6;\n      border: none;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n\n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n`;\n\n\nconst CommentInput = styled.input`\n  width: 90%;\n  padding: 5px 10px;\n  background-color: #e6e6e6;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n`;\n\nconst CommentsList = styled.ul`\n  list-style-image: url('https://img.icons8.com/officel/16/000000/user.png');\n`;\n\nconst Post = () => {\n  // const [comment, setComment] = useState('');\n  // const [commentList, setComments] = useState(props.comments);\n\n  // const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n  //   setComment(target.value);\n  // };\n\n  // const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n  //   e.preventDefault();\n  //   if (comment.trim() !== '') {\n  //     createComment({ body: comment, postId: props.post.id } as Comment);\n  //     setComment('');\n  //     setComments([...commentList, { body: comment, postId: props.post.id }]);\n  //   }\n  // };\n  // const { post: { title, body } } = props;\n\n  return (\n    <Layout>\n      <PostDetails>\n        <img\n          className=\"post-photo\"\n          alt=\"laptop\"\n          src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\"\n        />\n        {/* <div>\n          <h1>{title}</h1>\n          <p>{body}</p>\n          <form onSubmit={handleSubmit}>\n            <CommentInput\n              type=\"text\"\n              value={comment}\n              placeholder=\"Comment...\"\n              onChange={handleInputChange}\n            />\n            <button type=\"submit\">Add</button>\n          </form>\n          <CommentsList>\n            {commentList.map((item: Comment) => (\n              <li key={item.id}>\n                {item.body}\n              </li>\n            ))}\n          </CommentsList>\n        </div> */}\n      </PostDetails>\n    </Layout>\n  );\n};\n\n// Post.getInitialProps = async function (context: NextPageContext) {\n//   const { id } = context.query;\n//   const post = store.dispatch(fetchPost(id));\n//   console.log(post);\n//   return {\n//     id\n//   };\n// };\n\nPost.getInitialProps = async function (ctx) {\n  const { id } = ctx.query;\n  const post = await ctx.store.dispatch(fetchPost(id));\n  const comments = await ctx.store.dispatch(fetchComments());\n  const filteredcomments = comments.filter((comment: Comment) => comment.postId === +id)\n\n  return {\n    post,\n    comments: filteredcomments\n  };\n};\nexport default nextConnect((state) => state)(Post)\n"]},"metadata":{},"sourceType":"module"}