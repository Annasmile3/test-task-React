{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-top: 30px;\\n\\n  .post-photo {\\n    width: 50%;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport styled from 'styled-components';\nvar PostDetails = styled.section(_templateObject());\n\nvar Post = function Post(props) {\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    setComment(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(comment.trim() !== '')) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('https://simple-blog-api.crew.red/comments', {\n              body: comment,\n              postId: props.post.id\n            }));\n\n          case 3:\n            setComment('');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(PostDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"post-photo\",\n    src: \"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n    alt: \"post photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.post.body), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, comment.body);\n  })))), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: comment,\n    placeholder: \"Etner the comment\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Add\")));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, postFromServer, commentsFromServer, comments;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = context.query.id;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id, \"?_embed=comments\")));\n\n        case 3:\n          postFromServer = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/comments'));\n\n        case 6:\n          commentsFromServer = _context2.sent;\n          comments = commentsFromServer.data.filter(function (comment) {\n            return comment.postId === +id;\n          });\n          return _context2.abrupt(\"return\", {\n            post: postFromServer.data,\n            comments: comments\n          });\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/[id].tsx"],"names":["useState","Layout","axios","styled","PostDetails","section","Post","props","comment","setComment","handleInputChange","e","target","value","handleSubmit","trim","post","body","postId","id","title","comments","map","getInitialProps","context","query","get","postFromServer","commentsFromServer","data","filter"],"mappings":"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","sourcesContent":["import { useState, ChangeEvent, FormEvent } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport styled from 'styled-components'\n\nconst PostDetails = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 30px;\n\n  .post-photo {\n    width: 50%;\n  }\n`\n\nconst Post = (props:any) => {\n  const [comment, setComment] = useState('');\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setComment(e.target.value);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    if (comment.trim() !== '') {\n      await axios\n      .post('https://simple-blog-api.crew.red/comments', { body: comment, postId: props.post.id });\n      setComment('');\n    } \n  }  \n\n  return (\n    <Layout>\n      <PostDetails>\n      <img className=\"post-photo\" src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\" alt=\"post photo\"/>\n      <div>\n        <h1>{props.post.title}</h1>\n        <p>{props.post.body}</p>\n        <ul>\n          {props.comments.map(comment =>\n            <li key={comment.id}>\n              {comment.body}\n            </li>)}\n        </ul>\n      </div> \n      </PostDetails>\n      <form onSubmit={handleSubmit}>\n              <input\n                type=\"text\"\n                value={comment}\n                placeholder=\"Etner the comment\"\n                onChange={handleInputChange}\n              />\n              <button type=\"submit\">Add</button>\n            </form>\n  </Layout>\n  );\n}\nPost.getInitialProps = async function(context: any) {\n  const { id } = context.query;\n  const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments')\n  const comments = commentsFromServer.data.filter(comment => comment.postId === +id)\n  return { \n    post: postFromServer.data,\n    comments: comments\n  };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}