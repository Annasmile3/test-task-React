{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\new.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport { useState } from 'react';\n\nconst NewPost = () => {\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleBodyChange = e => {\n    setBody(e.currentTarget.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (title.trim().length > 0 && body.trim().length > 0) {\n      await axios.post('https://simple-blog-api.crew.red/posts', {\n        data: {\n          title,\n          body\n        }\n      });\n      setTitle('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: title,\n    placeholder: \"Etner the title\",\n    onChange: handleTitleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), error && title.trim() === '' && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Tht title is empty\"), __jsx(\"textarea\", {\n    value: body,\n    placeholder: \"Enter the post\",\n    onChange: handleBodyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), error && body.trim() === '' && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Tht post field is empty\"), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Create\")));\n};\n\nexport default NewPost;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/new.tsx"],"names":["Layout","axios","useState","NewPost","title","setTitle","body","setBody","error","setError","handleTitleChange","e","target","value","handleBodyChange","currentTarget","handleSubmit","preventDefault","trim","length","post","data"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,SAASC,QAAT,QAAiD,OAAjD;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACI,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMQ,iBAAiB,GAAIC,CAAD,IAAsC;AAC9DN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,CAAD,IAAyC;AAChEJ,IAAAA,OAAO,CAACI,CAAC,CAACI,aAAF,CAAgBF,KAAjB,CAAP;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAG,MAAOL,CAAP,IAAyC;AAC5DA,IAAAA,CAAC,CAACM,cAAF;;AAEA,QAAIb,KAAK,CAACc,IAAN,GAAaC,MAAb,GAAsB,CAAtB,IAA2Bb,IAAI,CAACY,IAAL,GAAYC,MAAZ,GAAqB,CAApD,EAAuD;AACrD,YAAMlB,KAAK,CACRmB,IADG,CACE,wCADF,EAC4C;AAAEC,QAAAA,IAAI,EAAE;AAAEjB,UAAAA,KAAF;AAASE,UAAAA;AAAT;AAAR,OAD5C,CAAN;AAEAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KALD,MAKO;AACLE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAXD;;AAYE,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEZ,KAFT;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,QAAQ,EAAEM,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUIF,KAAK,IAAIJ,KAAK,CAACc,IAAN,OAAiB,EAA3B,IAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVrC,EAWE;AACE,IAAA,KAAK,EAAEZ,IADT;AAEE,IAAA,WAAW,EAAC,gBAFd;AAGE,IAAA,QAAQ,EAAEQ,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAgBIN,KAAK,IAAIF,IAAI,CAACY,IAAL,OAAgB,EAA1B,IAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAhBpC,EAiBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,CADJ,CADF;AAuBD,CAhDH;;AAkDA,eAAef,OAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport axios  from 'axios';\nimport { useState, ChangeEvent, FormEvent } from 'react';\n\nconst NewPost = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleTitleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  };\n\n  const handleBodyChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBody(e.currentTarget.value);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    if (title.trim().length > 0 && body.trim().length > 0) {\n      await axios\n        .post('https://simple-blog-api.crew.red/posts', { data: { title, body }});\n      setTitle('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  }  \n    return(\n      <Layout>\n          <form onSubmit={handleSubmit}>\n            <div>\n              \n            </div>\n            <input\n              type=\"text\"\n              value={title}\n              placeholder=\"Etner the title\"\n              onChange={handleTitleChange}\n            />\n            {(error && title.trim() === '') && <div>Tht title is empty</div>}\n            <textarea \n              value={body} \n              placeholder=\"Enter the post\" \n              onChange={handleBodyChange} \n            />\n            {(error && body.trim() === '') && <div>Tht post field is empty</div>}\n            <button type=\"submit\">Create</button>\n          </form>\n      </Layout>\n    );\n  };\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}