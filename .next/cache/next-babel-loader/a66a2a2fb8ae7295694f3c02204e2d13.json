{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\new.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nconst Heading = styled.h1`\n  width: 250px;\n  margin: 30px auto 40px;\n`;\nconst SubmitButton = styled.button`\n  width: 70px;\n  text-align: center;\n  margin: 0 auto;\n  cursor: pointer;\n`;\n\nconst NewPost = () => {\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const NewPostForm = styled.form`\n  width: 250px;\n  margin: 30px auto 50px;\n  text-align: center;\n\n  input {\n    width: 100%;\n    padding: 5px;\n    border: 1px solid black;\n    border-radius: 2px;\n  }\n\n  textarea {\n    background: ${props => error ? \"palevioletred\" : \"white\"};\n    color: ${props => props.primary ? \"white\" : \"palevioletred\"};\n    width: 100%;\n    padding: 5px;\n    margin: 20px auto 20px;\n    border: 1px solid black;\n    border-radius: 2px;\n  }\n`;\n\n  const handleTitleChange = e => {\n    setError(false);\n    setTitle(e.target.value);\n  };\n\n  const handleBodyChange = e => {\n    setError(false);\n    setBody(e.currentTarget.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (title.trim() !== '' && body.trim() !== '') {\n      await axios.post('https://simple-blog-api.crew.red/posts', {\n        title,\n        body\n      });\n      setTitle('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Create new post\"), __jsx(NewPostForm, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    primary: true,\n    type: \"text\",\n    value: title,\n    name: \"title\",\n    placeholder: \"Enter the title\",\n    onChange: handleTitleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), error && title.trim() === '' && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Tht title is empty\"), __jsx(\"textarea\", {\n    rows: 5,\n    value: body,\n    name: \"body\",\n    placeholder: \"Enter the post\",\n    onChange: handleBodyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), error && body.trim() === '' && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Tht post field is empty\"), __jsx(SubmitButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Create\")));\n};\n\nexport default NewPost;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/new.tsx"],"names":["Layout","axios","useState","styled","Heading","h1","SubmitButton","button","NewPost","title","setTitle","body","setBody","error","setError","NewPostForm","form","props","primary","handleTitleChange","e","target","value","handleBodyChange","currentTarget","handleSubmit","preventDefault","trim","post"],"mappings":"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","sourcesContent":["import Layout from '../../components/MyLayout';\nimport axios  from 'axios';\nimport { useState, ChangeEvent, FormEvent } from 'react';\nimport styled from 'styled-components'\n\nconst Heading = styled.h1`\n  width: 250px;\n  margin: 30px auto 40px;\n`\nconst SubmitButton = styled.button`\n  width: 70px;\n  text-align: center;\n  margin: 0 auto;\n  cursor: pointer;\n`\nconst NewPost = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [error, setError] = useState(false);\n  const NewPostForm = styled.form`\n  width: 250px;\n  margin: 30px auto 50px;\n  text-align: center;\n\n  input {\n    width: 100%;\n    padding: 5px;\n    border: 1px solid black;\n    border-radius: 2px;\n  }\n\n  textarea {\n    background: ${props => error ? \"palevioletred\" : \"white\"};\n    color: ${props => props.primary ? \"white\" : \"palevioletred\"};\n    width: 100%;\n    padding: 5px;\n    margin: 20px auto 20px;\n    border: 1px solid black;\n    border-radius: 2px;\n  }\n`\n  const handleTitleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setError(false);\n    setTitle(e.target.value);\n  };\n\n  const handleBodyChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setError(false);\n    setBody(e.currentTarget.value);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    if (title.trim() !== '' &&  body.trim() !== '') {\n      await axios\n        .post('https://simple-blog-api.crew.red/posts', { title, body });\n      setTitle('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  }  \n    return(\n      <Layout>\n        <Heading>Create new post</Heading>\n          <NewPostForm onSubmit={handleSubmit}>\n            <input\n              primary\n              type=\"text\"\n              value={title}\n              name=\"title\"\n              placeholder=\"Enter the title\"\n              onChange={handleTitleChange}\n            />\n            {(error && title.trim() === '') && <div>Tht title is empty</div>}\n            <textarea\n              rows={5}\n              value={body} \n              name=\"body\"\n              placeholder=\"Enter the post\" \n              onChange={handleBodyChange} \n            />\n            {(error && body.trim() === '') && <div>Tht post field is empty</div>}\n            <SubmitButton type=\"submit\">Create</SubmitButton>\n          </NewPostForm>\n      </Layout>\n    );\n  };\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}