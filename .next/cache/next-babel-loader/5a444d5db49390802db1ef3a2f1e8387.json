{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport styled from 'styled-components';\nconst PostDetails = styled.section`\n  display: flex;\n  margin-top: 30px;\n  margin-left: 15px;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n\n  form {\n    position: relative;\n    button {\n      position: absolute;\n      top: ;\n      right: 10%;\n    }\n  }\n`;\nconst CommentInput = styled.input`\n  width: 90%;\n  padding: 5px 10px;\n  background-color: #e6e6e6;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n`;\n\nconst Post = props => {\n  const {\n    0: comment,\n    1: setComment\n  } = useState('');\n\n  const handleInputChange = e => {\n    setComment(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    if (comment.trim() !== '') {\n      await axios.post('https://simple-blog-api.crew.red/comments', {\n        body: comment,\n        postId: props.post.id\n      });\n      setComment('');\n    }\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(PostDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"post-photo\",\n    src: \"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n    alt: \"post photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.post.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.post.body), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(CommentInput, {\n    type: \"text\",\n    value: comment,\n    placeholder: \"Comment...\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Add\")), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.comments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, comment.body))))));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments');\n  const comments = commentsFromServer.data.filter(comment => comment.postId === +id);\n  return {\n    post: postFromServer.data,\n    comments: comments\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/[id].tsx"],"names":["useState","Layout","axios","styled","PostDetails","section","CommentInput","input","Post","props","comment","setComment","handleInputChange","e","target","value","handleSubmit","trim","post","body","postId","id","title","comments","map","getInitialProps","context","query","postFromServer","get","commentsFromServer","data","filter"],"mappings":"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","sourcesContent":["import { useState, ChangeEvent, FormEvent } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\nimport styled from 'styled-components'\n\nconst PostDetails = styled.section`\n  display: flex;\n  margin-top: 30px;\n  margin-left: 15px;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n\n  form {\n    position: relative;\n    button {\n      position: absolute;\n      top: ;\n      right: 10%;\n    }\n  }\n`\nconst CommentInput = styled.input`\n  width: 90%;\n  padding: 5px 10px;\n  background-color: #e6e6e6;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  .post-photo {\n    width: 50%;\n    margin-right: 5%;\n  }\n`\n\nconst Post = (props:any) => {\n  const [comment, setComment] = useState('');\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setComment(e.target.value);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    if (comment.trim() !== '') {\n      await axios\n      .post('https://simple-blog-api.crew.red/comments', { body: comment, postId: props.post.id });\n      setComment('');\n    } \n  }  \n\n  return (\n    <Layout>\n      <PostDetails>\n      <img className=\"post-photo\" src=\"https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\" alt=\"post photo\"/>\n      <div>\n        <h1>{props.post.title}</h1>\n        <p>{props.post.body}</p>\n        <form onSubmit={handleSubmit}>\n          <CommentInput\n            type=\"text\"\n            value={comment}\n            placeholder=\"Comment...\"\n            onChange={handleInputChange}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n        <ul>\n          {props.comments.map(comment =>\n            <li key={comment.id}>\n              {comment.body}\n            </li>)}\n        </ul>\n      </div> \n      </PostDetails>\n  </Layout>\n  );\n}\nPost.getInitialProps = async function(context: any) {\n  const { id } = context.query;\n  const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments')\n  const comments = commentsFromServer.data.filter(comment => comment.postId === +id)\n  return { \n    post: postFromServer.data,\n    comments: comments\n  };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}