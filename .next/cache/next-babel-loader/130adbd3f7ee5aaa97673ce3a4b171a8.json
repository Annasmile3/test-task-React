{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\posts\\\\[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nvar Post = function Post(props) {\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    setComment(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n\n            if (!(comment.trim() !== '')) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.post('https://simple-blog-api.crew.red/posts/${id}?_embed=comments', {\n              comments: {\n                body: comment\n              }\n            }));\n\n          case 4:\n            setComment('');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.post.data.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.post.data.body), props.comments && __jsx(React.Fragment, null, \"Comments:\", __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, comment.body);\n  }))), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: comment,\n    placeholder: \"Etner the comment\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Add\")));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, postFromServer, commentsFromServer, comments;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = context.query.id;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id, \"?_embed=comments\")));\n\n        case 3:\n          postFromServer = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/comments'));\n\n        case 6:\n          commentsFromServer = _context2.sent;\n          comments = commentsFromServer.data.filter(function (comment) {\n            return comment.postId === id;\n          });\n          return _context2.abrupt(\"return\", {\n            post: postFromServer.data,\n            comments: comments\n          });\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/posts/[id].tsx"],"names":["useState","Layout","axios","Post","props","comment","setComment","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","post","comments","body","data","title","map","id","getInitialProps","context","query","get","postFromServer","commentsFromServer","filter","postId"],"mappings":";;;;AAAA,SAASA,QAAT,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAe;AAAA,kBACIJ,QAAQ,CAAC,EAAD,CADZ;AAAA,MACnBK,OADmB;AAAA,MACVC,UADU;;AAG1B,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAsC;AAC9DF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOH,CAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,YAAAA,CAAC,CAACI,cAAF;;AADmB,kBAEfP,OAAO,CAACQ,IAAR,OAAmB,EAFJ;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGXX,KAAK,CACVY,IADK,CACA,8DADA,EACgE;AAAEC,cAAAA,QAAQ,EAAE;AAAEC,gBAAAA,IAAI,EAAEX;AAAR;AAAZ,aADhE,CAHW;;AAAA;AAKjBC,YAAAA,UAAU,CAAC,EAAD,CAAV;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AASA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACU,IAAN,CAAWG,IAAX,CAAgBC,KAArB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,KAAK,CAACU,IAAN,CAAWG,IAAX,CAAgBD,IAApB,CAFA,EAGCZ,KAAK,CAACW,QAAN,IACG,yCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACI,GAAT,CAAa,UAAAd,OAAO;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACe,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,OAAO,CAACW,IADX,CADmB;AAAA,GAApB,CADH,CAFF,CAJJ,EAaA;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEN,OAFT;AAGE,IAAA,WAAW,EAAC,mBAHd;AAIE,IAAA,QAAQ,EAAEE,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAOQ;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPR,CAbA,CADF;AAyBD,CAzCD;;AA0CAJ,IAAI,CAACkB,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbF,UAAAA,EADa,GACNE,OAAO,CAACC,KADF,CACbH,EADa;AAAA;AAAA,2CAEQlB,KAAK,CAACsB,GAAN,kDAAoDJ,EAApD,sBAFR;;AAAA;AAEfK,UAAAA,cAFe;AAAA;AAAA,2CAGYvB,KAAK,CAACsB,GAAN,CAAU,2CAAV,CAHZ;;AAAA;AAGfE,UAAAA,kBAHe;AAIfX,UAAAA,QAJe,GAIJW,kBAAkB,CAACT,IAAnB,CAAwBU,MAAxB,CAA+B,UAAAtB,OAAO;AAAA,mBAAIA,OAAO,CAACuB,MAAR,KAAmBR,EAAvB;AAAA,WAAtC,CAJI;AAAA,4CAKd;AACLN,YAAAA,IAAI,EAAEW,cAAc,CAACR,IADhB;AAELF,YAAAA,QAAQ,EAARA;AAFK,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWA,eAAeZ,IAAf","sourcesContent":["import { useState, ChangeEvent, FormEvent } from 'react';\nimport Layout from '../../components/MyLayout';\nimport axios from 'axios';\n\nconst Post = (props:any) => {\n  const [comment, setComment] = useState('');\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setComment(e.target.value);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (comment.trim() !== '') {\n      await axios\n      .post('https://simple-blog-api.crew.red/posts/${id}?_embed=comments', { comments: { body: comment }});\n      setComment('');\n    } \n  }  \n\n  return (\n    <Layout>\n    <h1>{props.post.data.title}</h1>\n    <p>{props.post.data.body}</p>\n    {props.comments && (\n        <>\n          Comments:\n          <ul>\n            {comments.map(comment => \n              <li key={comment.id}>\n                {comment.body}\n              </li>)}\n          </ul>\n        </>)}\n    <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={comment}\n              placeholder=\"Etner the comment\"\n              onChange={handleInputChange}\n            />\n            <button type=\"submit\">Add</button>\n          </form>\n  </Layout>\n  );\n}\nPost.getInitialProps = async function(context: any) {\n  const { id } = context.query;\n  const postFromServer = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  const commentsFromServer = await axios.get('https://simple-blog-api.crew.red/comments')\n  const comments = commentsFromServer.data.filter(comment => comment.postId === id)\n  return { \n    post: postFromServer.data,\n    comments\n  };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}