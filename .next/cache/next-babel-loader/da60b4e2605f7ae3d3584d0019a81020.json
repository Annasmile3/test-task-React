{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"D:\\\\test_tasks\\\\test-task-React\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport axios from 'axios';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, show.name)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = axios.get('https://api.tvmaze.com/search/shows?q=batman'); // const data = await res.json();\n\n          _context.t0 = console;\n          _context.t1 = \"Show data fetched. Count: \";\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res);\n\n        case 5:\n          _context.t2 = _context.sent;\n          _context.t3 = _context.t1.concat.call(_context.t1, _context.t2);\n\n          _context.t0.log.call(_context.t0, _context.t3);\n\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(res);\n\n        case 10:\n          _context.t4 = _context.sent.data.map(function (entry) {\n            return entry.show;\n          });\n          return _context.abrupt(\"return\", {\n            shows: _context.t4\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/test_tasks/test-task-React/pages/index.tsx"],"names":["Layout","Link","axios","Index","props","shows","map","show","id","name","getInitialProps","res","get","console","log","data","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACZ,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD;AAAA,WACf;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADe;AAAA,GAAhB,CADH,CAFF,CADY;AAAA,CAAd;;AAeAN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,GADgB,GACVT,KAAK,CAACU,GAAN,CAAU,8CAAV,CADU,EAEtB;;AAFsB,wBAItBC,OAJsB;AAAA;AAAA;AAAA,2CAI0BF,GAJ1B;;AAAA;AAAA;AAAA;;AAAA,sBAIdG,GAJc;;AAAA;AAAA,2CAONH,GAPM;;AAAA;AAAA,sCAODI,IAPC,CAOIT,GAPJ,CAOQ,UAACU,KAAD;AAAA,mBAAeA,KAAK,CAACT,IAArB;AAAA,WAPR;AAAA;AAOpBF,YAAAA,KAPoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWA,eAAeF,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport axios from 'axios';\n\nconst Index = (props:any) => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map((show:any) => (\n        <li key={show.id}>\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const res = axios.get('https://api.tvmaze.com/search/shows?q=batman');\n  // const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${(await res)}`);\n\n  return {\n    shows: (await res).data.map((entry:any) => entry.show)\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}